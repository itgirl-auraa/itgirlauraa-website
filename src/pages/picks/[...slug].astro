---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const picks = await getCollection('picks');
  return picks.map(pick => ({
    params: { slug: pick.slug },
    props: { pick },
  }));
}

const { pick } = Astro.props;
const { Content, components } = await pick.render();

// Get related picks (same category, excluding current pick)
const allPicks = await getCollection('picks');
const relatedPicks = allPicks
  .filter(p => p.data.category === pick.data.category && p.slug !== pick.slug)
  .slice(0, 3);
---

<Layout 
  title={`${pick.data.title} - IT Girl Picks`}
  description={pick.data.description}
  ogImage={pick.data.image}
>
  <article class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <!-- Header -->
    <header class="mb-16 text-center">
      <div class="inline-block px-3 py-1 rounded-full text-xs font-medium bg-espresso/10 text-espresso mb-4">
        {pick.data.category}
      </div>
      
      <h1 class="font-display text-3xl md:text-4xl text-espresso mb-6">{pick.data.title}</h1>
      
      <p class="text-lg text-bronze max-w-2xl mx-auto">{pick.data.description}</p>
      
      <div class="mt-4 text-sm text-bronze">
        {new Date(pick.data.date).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}
      </div>
    </header>
    
    <!-- MDX Content -->
    <div class="mdx-content prose prose-lg max-w-none prose-headings:text-espresso prose-p:text-bronze">
      <Content components={components} />
    </div>

    <!-- Related Products -->
    {relatedPicks.length > 0 && (
      <section aria-labelledby="related-picks-heading" class="mt-20">
        <h2 id="related-picks-heading" class="font-display text-2xl text-espresso mb-8 text-center">You Might Also Like</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {relatedPicks.map((relatedPick) => (
            <article class="group bg-white rounded-2xl shadow-sm hover:shadow-md transition-all duration-300">
              <a 
                href={`/picks/${relatedPick.slug}`} 
                class="block"
                aria-labelledby={`related-pick-${relatedPick.slug}`}
              >
                {relatedPick.data.image && (
                  <div class="aspect-[3/4] rounded-t-2xl overflow-hidden">
                    <img 
                      src={relatedPick.data.image} 
                      alt={relatedPick.data.title}
                      class="w-full h-full object-cover group-hover:scale-105 transition duration-300"
                      loading="lazy"
                      width="400"
                      height="600"
                    />
                  </div>
                )}
                <div class="p-6">
                  <h3 id={`related-pick-${relatedPick.slug}`} class="font-display text-xl text-espresso mb-2">
                    {relatedPick.data.title}
                  </h3>
                  <p class="text-bronze mb-2 line-clamp-2">{relatedPick.data.description}</p>
                </div>
              </a>
            </article>
          ))}
        </div>
      </section>
    )}
  </article>
</Layout>

<style>
  /* Style for alternating sections */
  .prose h2 {
    @apply mt-16 mb-6 text-2xl font-display text-espresso;
  }
  
  .prose h3 {
    @apply mt-8 mb-4 text-xl font-display text-espresso;
  }
  
  .prose p {
    @apply text-bronze mb-6;
  }
  
  .prose ul {
    @apply space-y-2 mb-6;
  }
  
  .prose ul li {
    @apply flex items-start text-bronze;
  }
  
  .prose ul li::before {
    content: "â€¢";
    @apply text-espresso mr-2 font-bold;
  }
  
  /* MDX specific styles */
  .mdx-content :global(h2) {
    @apply mt-16 mb-6 text-2xl font-display text-espresso text-center;
  }
  
  .mdx-content :global(h3) {
    @apply mt-8 mb-4 text-xl font-display text-espresso;
  }
  
  .mdx-content :global(.grid) {
    @apply my-8;
  }
</style> 