---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const picks = await getCollection('picks');
  return picks.map(pick => ({
    params: { slug: pick.slug },
    props: { pick },
  }));
}

const { pick } = Astro.props;
const { Content } = await pick.render();

// Get related picks (same category, excluding current pick)
const allPicks = await getCollection('picks');
const relatedPicks = allPicks
  .filter(p => p.data.category === pick.data.category && p.slug !== pick.slug)
  .slice(0, 3);
---

<Layout 
  title={`${pick.data.title} - It Girl Picks`}
  description={pick.data.description}
>
  <article class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
      <!-- Image Section -->
      <div class="relative">
        <div class="sticky top-8">
          <div class="aspect-[2/3] rounded-lg overflow-hidden bg-warm-50">
            {pick.data.image ? (
              <img 
                src={pick.data.image} 
                alt={pick.data.title}
                class="w-full h-full object-cover"
              />
            ) : (
              <div class="w-full h-full bg-warm-100"></div>
            )}
          </div>
          <!-- Pinterest Share Button -->
          <button class="mt-4 w-full py-3 px-4 bg-red-500 text-white rounded-md hover:bg-red-600 transition flex items-center justify-center gap-2">
            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
              <path d="M12 0c-6.627 0-12 5.373-12 12 0 5.084 3.163 9.426 7.627 11.174-.105-.949-.2-2.405.042-3.441.218-.937 1.407-5.965 1.407-5.965s-.359-.719-.359-1.782c0-1.668.967-2.914 2.171-2.914 1.023 0 1.518.769 1.518 1.69 0 1.029-.655 2.568-.994 3.995-.283 1.194.599 2.169 1.777 2.169 2.133 0 3.772-2.249 3.772-5.495 0-2.873-2.064-4.882-5.012-4.882-3.414 0-5.418 2.561-5.418 5.207 0 1.031.397 2.138.893 2.738.098.119.112.224.083.345l-.333 1.36c-.053.22-.174.267-.402.161-1.499-.698-2.436-2.889-2.436-4.649 0-3.785 2.75-7.262 7.929-7.262 4.163 0 7.398 2.967 7.398 6.931 0 4.136-2.607 7.464-6.227 7.464-1.216 0-2.359-.631-2.75-1.378l-.748 2.853c-.271 1.043-1.002 2.35-1.492 3.146 1.124.347 2.317.535 3.554.535 6.627 0 12-5.373 12-12 0-6.628-5.373-12-12-12z" />
            </svg>
            Save to Pinterest
          </button>
        </div>
      </div>

      <!-- Content Section -->
      <div>
        <div class="mb-8">
          <div class="flex items-center gap-4 text-sm text-gray-500 mb-4">
            <span>{pick.data.category}</span>
            <span>â€¢</span>
            <span>{new Date(pick.data.date).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}</span>
          </div>
          <h1 class="font-display text-3xl md:text-4xl text-gray-900 mb-4">{pick.data.title}</h1>
          <p class="text-lg text-gray-600 mb-6">{pick.data.description}</p>
          <div class="flex items-center gap-6">
            <span class="text-2xl font-medium text-blush-500">${pick.data.price}</span>
            <a 
              href={pick.data.amazon_link} 
              target="_blank" 
              rel="nofollow noopener" 
              class="flex-1 bg-blush-400 text-white text-center py-3 px-6 rounded-md hover:bg-blush-500 transition"
            >
              Shop on Amazon
            </a>
          </div>
        </div>

        <!-- Product Details -->
        <div class="prose prose-lg max-w-none">
          <Content />
        </div>

        <!-- Affiliate Disclosure -->
        <p class="mt-8 text-sm text-gray-500 italic">
          *This post contains affiliate links. If you make a purchase through these links, I may earn a small commission at no additional cost to you.
        </p>
      </div>
    </div>

    <!-- Related Products -->
    {relatedPicks.length > 0 && (
      <div class="mt-20">
        <h2 class="font-display text-2xl text-gray-900 mb-8">You Might Also Like</h2>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {relatedPicks.map((relatedPick) => (
            <article class="group">
              <a href={`/picks/${relatedPick.slug}`} class="block">
                <div class="aspect-[2/3] rounded-lg overflow-hidden bg-warm-50 mb-4">
                  {relatedPick.data.image ? (
                    <img 
                      src={relatedPick.data.image} 
                      alt={relatedPick.data.title}
                      class="w-full h-full object-cover group-hover:scale-105 transition duration-300"
                    />
                  ) : (
                    <div class="w-full h-full bg-warm-100"></div>
                  )}
                </div>
                <h3 class="font-display text-xl mb-2 group-hover:text-blush-500 transition">
                  {relatedPick.data.title}
                </h3>
                <p class="text-gray-600 mb-2">{relatedPick.data.description}</p>
                <span class="text-blush-500 font-medium">${relatedPick.data.price}</span>
              </a>
            </article>
          ))}
        </div>
      </div>
    )}
  </article>
</Layout> 